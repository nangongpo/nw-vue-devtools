(self["webpackChunk_vue_devtools_shell_chrome"] = self["webpackChunk_vue_devtools_shell_chrome"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_redis_redis_js"],{

/***/ "../../node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conf": () => (/* binding */ conf),
/* harmony export */   "language": () => (/* binding */ language)
/* harmony export */ });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var conf = {
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ]
};
var language = {
    defaultToken: '',
    tokenPostfix: '.redis',
    ignoreCase: true,
    brackets: [
        { open: '[', close: ']', token: 'delimiter.square' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    keywords: [
        'APPEND',
        'AUTH',
        'BGREWRITEAOF',
        'BGSAVE',
        'BITCOUNT',
        'BITFIELD',
        'BITOP',
        'BITPOS',
        'BLPOP',
        'BRPOP',
        'BRPOPLPUSH',
        'CLIENT',
        'KILL',
        'LIST',
        'GETNAME',
        'PAUSE',
        'REPLY',
        'SETNAME',
        'CLUSTER',
        'ADDSLOTS',
        'COUNT-FAILURE-REPORTS',
        'COUNTKEYSINSLOT',
        'DELSLOTS',
        'FAILOVER',
        'FORGET',
        'GETKEYSINSLOT',
        'INFO',
        'KEYSLOT',
        'MEET',
        'NODES',
        'REPLICATE',
        'RESET',
        'SAVECONFIG',
        'SET-CONFIG-EPOCH',
        'SETSLOT',
        'SLAVES',
        'SLOTS',
        'COMMAND',
        'COUNT',
        'GETKEYS',
        'CONFIG',
        'GET',
        'REWRITE',
        'SET',
        'RESETSTAT',
        'DBSIZE',
        'DEBUG',
        'OBJECT',
        'SEGFAULT',
        'DECR',
        'DECRBY',
        'DEL',
        'DISCARD',
        'DUMP',
        'ECHO',
        'EVAL',
        'EVALSHA',
        'EXEC',
        'EXISTS',
        'EXPIRE',
        'EXPIREAT',
        'FLUSHALL',
        'FLUSHDB',
        'GEOADD',
        'GEOHASH',
        'GEOPOS',
        'GEODIST',
        'GEORADIUS',
        'GEORADIUSBYMEMBER',
        'GETBIT',
        'GETRANGE',
        'GETSET',
        'HDEL',
        'HEXISTS',
        'HGET',
        'HGETALL',
        'HINCRBY',
        'HINCRBYFLOAT',
        'HKEYS',
        'HLEN',
        'HMGET',
        'HMSET',
        'HSET',
        'HSETNX',
        'HSTRLEN',
        'HVALS',
        'INCR',
        'INCRBY',
        'INCRBYFLOAT',
        'KEYS',
        'LASTSAVE',
        'LINDEX',
        'LINSERT',
        'LLEN',
        'LPOP',
        'LPUSH',
        'LPUSHX',
        'LRANGE',
        'LREM',
        'LSET',
        'LTRIM',
        'MGET',
        'MIGRATE',
        'MONITOR',
        'MOVE',
        'MSET',
        'MSETNX',
        'MULTI',
        'PERSIST',
        'PEXPIRE',
        'PEXPIREAT',
        'PFADD',
        'PFCOUNT',
        'PFMERGE',
        'PING',
        'PSETEX',
        'PSUBSCRIBE',
        'PUBSUB',
        'PTTL',
        'PUBLISH',
        'PUNSUBSCRIBE',
        'QUIT',
        'RANDOMKEY',
        'READONLY',
        'READWRITE',
        'RENAME',
        'RENAMENX',
        'RESTORE',
        'ROLE',
        'RPOP',
        'RPOPLPUSH',
        'RPUSH',
        'RPUSHX',
        'SADD',
        'SAVE',
        'SCARD',
        'SCRIPT',
        'FLUSH',
        'LOAD',
        'SDIFF',
        'SDIFFSTORE',
        'SELECT',
        'SETBIT',
        'SETEX',
        'SETNX',
        'SETRANGE',
        'SHUTDOWN',
        'SINTER',
        'SINTERSTORE',
        'SISMEMBER',
        'SLAVEOF',
        'SLOWLOG',
        'SMEMBERS',
        'SMOVE',
        'SORT',
        'SPOP',
        'SRANDMEMBER',
        'SREM',
        'STRLEN',
        'SUBSCRIBE',
        'SUNION',
        'SUNIONSTORE',
        'SWAPDB',
        'SYNC',
        'TIME',
        'TOUCH',
        'TTL',
        'TYPE',
        'UNSUBSCRIBE',
        'UNLINK',
        'UNWATCH',
        'WAIT',
        'WATCH',
        'ZADD',
        'ZCARD',
        'ZCOUNT',
        'ZINCRBY',
        'ZINTERSTORE',
        'ZLEXCOUNT',
        'ZRANGE',
        'ZRANGEBYLEX',
        'ZREVRANGEBYLEX',
        'ZRANGEBYSCORE',
        'ZRANK',
        'ZREM',
        'ZREMRANGEBYLEX',
        'ZREMRANGEBYRANK',
        'ZREMRANGEBYSCORE',
        'ZREVRANGE',
        'ZREVRANGEBYSCORE',
        'ZREVRANK',
        'ZSCORE',
        'ZUNIONSTORE',
        'SCAN',
        'SSCAN',
        'HSCAN',
        'ZSCAN'
    ],
    operators: [
    // NOT SUPPORTED
    ],
    builtinFunctions: [
    // NOT SUPPORTED
    ],
    builtinVariables: [
    // NOT SUPPORTED
    ],
    pseudoColumns: [
    // NOT SUPPORTED
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@pseudoColumns' },
            { include: '@numbers' },
            { include: '@strings' },
            { include: '@scopes' },
            [/[;,.]/, 'delimiter'],
            [/[()]/, '@brackets'],
            [
                /[\w@#$]+/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@operators': 'operator',
                        '@builtinVariables': 'predefined',
                        '@builtinFunctions': 'predefined',
                        '@default': 'identifier'
                    }
                }
            ],
            [/[<>=!%&+\-*/|~^]/, 'operator']
        ],
        whitespace: [[/\s+/, 'white']],
        pseudoColumns: [
            [
                /[$][A-Za-z_][\w@#$]*/,
                {
                    cases: {
                        '@pseudoColumns': 'predefined',
                        '@default': 'identifier'
                    }
                }
            ]
        ],
        numbers: [
            [/0[xX][0-9a-fA-F]*/, 'number'],
            [/[$][+-]*\d*(\.\d*)?/, 'number'],
            [/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/, 'number']
        ],
        strings: [
            [/'/, { token: 'string', next: '@string' }],
            [/"/, { token: 'string.double', next: '@stringDouble' }]
        ],
        string: [
            [/[^']+/, 'string'],
            [/''/, 'string'],
            [/'/, { token: 'string', next: '@pop' }]
        ],
        stringDouble: [
            [/[^"]+/, 'string.double'],
            [/""/, 'string.double'],
            [/"/, { token: 'string.double', next: '@pop' }]
        ],
        scopes: [
        // NOT SUPPORTED
        ]
    }
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdnVlLWRldnRvb2xzL3NoZWxsLWNocm9tZS8uLi8uLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3JlZGlzL3JlZGlzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxTQUFTLFlBQVksR0FBRztBQUNqQyxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVMsU0FBUyxZQUFZLEdBQUc7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUztBQUNUO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxtREFBbUQ7QUFDNUQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5QkFBeUI7QUFDdEMsYUFBYSw0QkFBNEI7QUFDekMsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxxQkFBcUI7QUFDbEMsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtQ0FBbUM7QUFDdEQsbUJBQW1CLGdEQUFnRDtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnQ0FBZ0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsdUNBQXVDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJub2RlX21vZHVsZXNfbW9uYWNvLWVkaXRvcl9lc21fdnNfYmFzaWMtbGFuZ3VhZ2VzX3JlZGlzX3JlZGlzX2pzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgdmFyIGNvbmYgPSB7XG4gICAgYnJhY2tldHM6IFtcbiAgICAgICAgWyd7JywgJ30nXSxcbiAgICAgICAgWydbJywgJ10nXSxcbiAgICAgICAgWycoJywgJyknXVxuICAgIF0sXG4gICAgYXV0b0Nsb3NpbmdQYWlyczogW1xuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxuICAgICAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXG4gICAgICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiB9XG4gICAgXSxcbiAgICBzdXJyb3VuZGluZ1BhaXJzOiBbXG4gICAgICAgIHsgb3BlbjogJ3snLCBjbG9zZTogJ30nIH0sXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nIH0sXG4gICAgICAgIHsgb3BlbjogJygnLCBjbG9zZTogJyknIH0sXG4gICAgICAgIHsgb3BlbjogJ1wiJywgY2xvc2U6ICdcIicgfSxcbiAgICAgICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH1cbiAgICBdXG59O1xuZXhwb3J0IHZhciBsYW5ndWFnZSA9IHtcbiAgICBkZWZhdWx0VG9rZW46ICcnLFxuICAgIHRva2VuUG9zdGZpeDogJy5yZWRpcycsXG4gICAgaWdub3JlQ2FzZTogdHJ1ZSxcbiAgICBicmFja2V0czogW1xuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJywgdG9rZW46ICdkZWxpbWl0ZXIuc3F1YXJlJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJywgdG9rZW46ICdkZWxpbWl0ZXIucGFyZW50aGVzaXMnIH1cbiAgICBdLFxuICAgIGtleXdvcmRzOiBbXG4gICAgICAgICdBUFBFTkQnLFxuICAgICAgICAnQVVUSCcsXG4gICAgICAgICdCR1JFV1JJVEVBT0YnLFxuICAgICAgICAnQkdTQVZFJyxcbiAgICAgICAgJ0JJVENPVU5UJyxcbiAgICAgICAgJ0JJVEZJRUxEJyxcbiAgICAgICAgJ0JJVE9QJyxcbiAgICAgICAgJ0JJVFBPUycsXG4gICAgICAgICdCTFBPUCcsXG4gICAgICAgICdCUlBPUCcsXG4gICAgICAgICdCUlBPUExQVVNIJyxcbiAgICAgICAgJ0NMSUVOVCcsXG4gICAgICAgICdLSUxMJyxcbiAgICAgICAgJ0xJU1QnLFxuICAgICAgICAnR0VUTkFNRScsXG4gICAgICAgICdQQVVTRScsXG4gICAgICAgICdSRVBMWScsXG4gICAgICAgICdTRVROQU1FJyxcbiAgICAgICAgJ0NMVVNURVInLFxuICAgICAgICAnQUREU0xPVFMnLFxuICAgICAgICAnQ09VTlQtRkFJTFVSRS1SRVBPUlRTJyxcbiAgICAgICAgJ0NPVU5US0VZU0lOU0xPVCcsXG4gICAgICAgICdERUxTTE9UUycsXG4gICAgICAgICdGQUlMT1ZFUicsXG4gICAgICAgICdGT1JHRVQnLFxuICAgICAgICAnR0VUS0VZU0lOU0xPVCcsXG4gICAgICAgICdJTkZPJyxcbiAgICAgICAgJ0tFWVNMT1QnLFxuICAgICAgICAnTUVFVCcsXG4gICAgICAgICdOT0RFUycsXG4gICAgICAgICdSRVBMSUNBVEUnLFxuICAgICAgICAnUkVTRVQnLFxuICAgICAgICAnU0FWRUNPTkZJRycsXG4gICAgICAgICdTRVQtQ09ORklHLUVQT0NIJyxcbiAgICAgICAgJ1NFVFNMT1QnLFxuICAgICAgICAnU0xBVkVTJyxcbiAgICAgICAgJ1NMT1RTJyxcbiAgICAgICAgJ0NPTU1BTkQnLFxuICAgICAgICAnQ09VTlQnLFxuICAgICAgICAnR0VUS0VZUycsXG4gICAgICAgICdDT05GSUcnLFxuICAgICAgICAnR0VUJyxcbiAgICAgICAgJ1JFV1JJVEUnLFxuICAgICAgICAnU0VUJyxcbiAgICAgICAgJ1JFU0VUU1RBVCcsXG4gICAgICAgICdEQlNJWkUnLFxuICAgICAgICAnREVCVUcnLFxuICAgICAgICAnT0JKRUNUJyxcbiAgICAgICAgJ1NFR0ZBVUxUJyxcbiAgICAgICAgJ0RFQ1InLFxuICAgICAgICAnREVDUkJZJyxcbiAgICAgICAgJ0RFTCcsXG4gICAgICAgICdESVNDQVJEJyxcbiAgICAgICAgJ0RVTVAnLFxuICAgICAgICAnRUNITycsXG4gICAgICAgICdFVkFMJyxcbiAgICAgICAgJ0VWQUxTSEEnLFxuICAgICAgICAnRVhFQycsXG4gICAgICAgICdFWElTVFMnLFxuICAgICAgICAnRVhQSVJFJyxcbiAgICAgICAgJ0VYUElSRUFUJyxcbiAgICAgICAgJ0ZMVVNIQUxMJyxcbiAgICAgICAgJ0ZMVVNIREInLFxuICAgICAgICAnR0VPQUREJyxcbiAgICAgICAgJ0dFT0hBU0gnLFxuICAgICAgICAnR0VPUE9TJyxcbiAgICAgICAgJ0dFT0RJU1QnLFxuICAgICAgICAnR0VPUkFESVVTJyxcbiAgICAgICAgJ0dFT1JBRElVU0JZTUVNQkVSJyxcbiAgICAgICAgJ0dFVEJJVCcsXG4gICAgICAgICdHRVRSQU5HRScsXG4gICAgICAgICdHRVRTRVQnLFxuICAgICAgICAnSERFTCcsXG4gICAgICAgICdIRVhJU1RTJyxcbiAgICAgICAgJ0hHRVQnLFxuICAgICAgICAnSEdFVEFMTCcsXG4gICAgICAgICdISU5DUkJZJyxcbiAgICAgICAgJ0hJTkNSQllGTE9BVCcsXG4gICAgICAgICdIS0VZUycsXG4gICAgICAgICdITEVOJyxcbiAgICAgICAgJ0hNR0VUJyxcbiAgICAgICAgJ0hNU0VUJyxcbiAgICAgICAgJ0hTRVQnLFxuICAgICAgICAnSFNFVE5YJyxcbiAgICAgICAgJ0hTVFJMRU4nLFxuICAgICAgICAnSFZBTFMnLFxuICAgICAgICAnSU5DUicsXG4gICAgICAgICdJTkNSQlknLFxuICAgICAgICAnSU5DUkJZRkxPQVQnLFxuICAgICAgICAnS0VZUycsXG4gICAgICAgICdMQVNUU0FWRScsXG4gICAgICAgICdMSU5ERVgnLFxuICAgICAgICAnTElOU0VSVCcsXG4gICAgICAgICdMTEVOJyxcbiAgICAgICAgJ0xQT1AnLFxuICAgICAgICAnTFBVU0gnLFxuICAgICAgICAnTFBVU0hYJyxcbiAgICAgICAgJ0xSQU5HRScsXG4gICAgICAgICdMUkVNJyxcbiAgICAgICAgJ0xTRVQnLFxuICAgICAgICAnTFRSSU0nLFxuICAgICAgICAnTUdFVCcsXG4gICAgICAgICdNSUdSQVRFJyxcbiAgICAgICAgJ01PTklUT1InLFxuICAgICAgICAnTU9WRScsXG4gICAgICAgICdNU0VUJyxcbiAgICAgICAgJ01TRVROWCcsXG4gICAgICAgICdNVUxUSScsXG4gICAgICAgICdQRVJTSVNUJyxcbiAgICAgICAgJ1BFWFBJUkUnLFxuICAgICAgICAnUEVYUElSRUFUJyxcbiAgICAgICAgJ1BGQUREJyxcbiAgICAgICAgJ1BGQ09VTlQnLFxuICAgICAgICAnUEZNRVJHRScsXG4gICAgICAgICdQSU5HJyxcbiAgICAgICAgJ1BTRVRFWCcsXG4gICAgICAgICdQU1VCU0NSSUJFJyxcbiAgICAgICAgJ1BVQlNVQicsXG4gICAgICAgICdQVFRMJyxcbiAgICAgICAgJ1BVQkxJU0gnLFxuICAgICAgICAnUFVOU1VCU0NSSUJFJyxcbiAgICAgICAgJ1FVSVQnLFxuICAgICAgICAnUkFORE9NS0VZJyxcbiAgICAgICAgJ1JFQURPTkxZJyxcbiAgICAgICAgJ1JFQURXUklURScsXG4gICAgICAgICdSRU5BTUUnLFxuICAgICAgICAnUkVOQU1FTlgnLFxuICAgICAgICAnUkVTVE9SRScsXG4gICAgICAgICdST0xFJyxcbiAgICAgICAgJ1JQT1AnLFxuICAgICAgICAnUlBPUExQVVNIJyxcbiAgICAgICAgJ1JQVVNIJyxcbiAgICAgICAgJ1JQVVNIWCcsXG4gICAgICAgICdTQUREJyxcbiAgICAgICAgJ1NBVkUnLFxuICAgICAgICAnU0NBUkQnLFxuICAgICAgICAnU0NSSVBUJyxcbiAgICAgICAgJ0ZMVVNIJyxcbiAgICAgICAgJ0xPQUQnLFxuICAgICAgICAnU0RJRkYnLFxuICAgICAgICAnU0RJRkZTVE9SRScsXG4gICAgICAgICdTRUxFQ1QnLFxuICAgICAgICAnU0VUQklUJyxcbiAgICAgICAgJ1NFVEVYJyxcbiAgICAgICAgJ1NFVE5YJyxcbiAgICAgICAgJ1NFVFJBTkdFJyxcbiAgICAgICAgJ1NIVVRET1dOJyxcbiAgICAgICAgJ1NJTlRFUicsXG4gICAgICAgICdTSU5URVJTVE9SRScsXG4gICAgICAgICdTSVNNRU1CRVInLFxuICAgICAgICAnU0xBVkVPRicsXG4gICAgICAgICdTTE9XTE9HJyxcbiAgICAgICAgJ1NNRU1CRVJTJyxcbiAgICAgICAgJ1NNT1ZFJyxcbiAgICAgICAgJ1NPUlQnLFxuICAgICAgICAnU1BPUCcsXG4gICAgICAgICdTUkFORE1FTUJFUicsXG4gICAgICAgICdTUkVNJyxcbiAgICAgICAgJ1NUUkxFTicsXG4gICAgICAgICdTVUJTQ1JJQkUnLFxuICAgICAgICAnU1VOSU9OJyxcbiAgICAgICAgJ1NVTklPTlNUT1JFJyxcbiAgICAgICAgJ1NXQVBEQicsXG4gICAgICAgICdTWU5DJyxcbiAgICAgICAgJ1RJTUUnLFxuICAgICAgICAnVE9VQ0gnLFxuICAgICAgICAnVFRMJyxcbiAgICAgICAgJ1RZUEUnLFxuICAgICAgICAnVU5TVUJTQ1JJQkUnLFxuICAgICAgICAnVU5MSU5LJyxcbiAgICAgICAgJ1VOV0FUQ0gnLFxuICAgICAgICAnV0FJVCcsXG4gICAgICAgICdXQVRDSCcsXG4gICAgICAgICdaQUREJyxcbiAgICAgICAgJ1pDQVJEJyxcbiAgICAgICAgJ1pDT1VOVCcsXG4gICAgICAgICdaSU5DUkJZJyxcbiAgICAgICAgJ1pJTlRFUlNUT1JFJyxcbiAgICAgICAgJ1pMRVhDT1VOVCcsXG4gICAgICAgICdaUkFOR0UnLFxuICAgICAgICAnWlJBTkdFQllMRVgnLFxuICAgICAgICAnWlJFVlJBTkdFQllMRVgnLFxuICAgICAgICAnWlJBTkdFQllTQ09SRScsXG4gICAgICAgICdaUkFOSycsXG4gICAgICAgICdaUkVNJyxcbiAgICAgICAgJ1pSRU1SQU5HRUJZTEVYJyxcbiAgICAgICAgJ1pSRU1SQU5HRUJZUkFOSycsXG4gICAgICAgICdaUkVNUkFOR0VCWVNDT1JFJyxcbiAgICAgICAgJ1pSRVZSQU5HRScsXG4gICAgICAgICdaUkVWUkFOR0VCWVNDT1JFJyxcbiAgICAgICAgJ1pSRVZSQU5LJyxcbiAgICAgICAgJ1pTQ09SRScsXG4gICAgICAgICdaVU5JT05TVE9SRScsXG4gICAgICAgICdTQ0FOJyxcbiAgICAgICAgJ1NTQ0FOJyxcbiAgICAgICAgJ0hTQ0FOJyxcbiAgICAgICAgJ1pTQ0FOJ1xuICAgIF0sXG4gICAgb3BlcmF0b3JzOiBbXG4gICAgLy8gTk9UIFNVUFBPUlRFRFxuICAgIF0sXG4gICAgYnVpbHRpbkZ1bmN0aW9uczogW1xuICAgIC8vIE5PVCBTVVBQT1JURURcbiAgICBdLFxuICAgIGJ1aWx0aW5WYXJpYWJsZXM6IFtcbiAgICAvLyBOT1QgU1VQUE9SVEVEXG4gICAgXSxcbiAgICBwc2V1ZG9Db2x1bW5zOiBbXG4gICAgLy8gTk9UIFNVUFBPUlRFRFxuICAgIF0sXG4gICAgdG9rZW5pemVyOiB7XG4gICAgICAgIHJvb3Q6IFtcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0B3aGl0ZXNwYWNlJyB9LFxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHBzZXVkb0NvbHVtbnMnIH0sXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAbnVtYmVycycgfSxcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0BzdHJpbmdzJyB9LFxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHNjb3BlcycgfSxcbiAgICAgICAgICAgIFsvWzssLl0vLCAnZGVsaW1pdGVyJ10sXG4gICAgICAgICAgICBbL1soKV0vLCAnQGJyYWNrZXRzJ10sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgL1tcXHdAIyRdKy8sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ0BrZXl3b3Jkcyc6ICdrZXl3b3JkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAb3BlcmF0b3JzJzogJ29wZXJhdG9yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAYnVpbHRpblZhcmlhYmxlcyc6ICdwcmVkZWZpbmVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAYnVpbHRpbkZ1bmN0aW9ucyc6ICdwcmVkZWZpbmVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6ICdpZGVudGlmaWVyJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsvWzw+PSElJitcXC0qL3x+Xl0vLCAnb3BlcmF0b3InXVxuICAgICAgICBdLFxuICAgICAgICB3aGl0ZXNwYWNlOiBbWy9cXHMrLywgJ3doaXRlJ11dLFxuICAgICAgICBwc2V1ZG9Db2x1bW5zOiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgL1skXVtBLVphLXpfXVtcXHdAIyRdKi8sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ0Bwc2V1ZG9Db2x1bW5zJzogJ3ByZWRlZmluZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJ2lkZW50aWZpZXInXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIF0sXG4gICAgICAgIG51bWJlcnM6IFtcbiAgICAgICAgICAgIFsvMFt4WF1bMC05YS1mQS1GXSovLCAnbnVtYmVyJ10sXG4gICAgICAgICAgICBbL1skXVsrLV0qXFxkKihcXC5cXGQqKT8vLCAnbnVtYmVyJ10sXG4gICAgICAgICAgICBbLygoXFxkKyhcXC5cXGQqKT8pfChcXC5cXGQrKSkoW2VFXVtcXC0rXT9cXGQrKT8vLCAnbnVtYmVyJ11cbiAgICAgICAgXSxcbiAgICAgICAgc3RyaW5nczogW1xuICAgICAgICAgICAgWy8nLywgeyB0b2tlbjogJ3N0cmluZycsIG5leHQ6ICdAc3RyaW5nJyB9XSxcbiAgICAgICAgICAgIFsvXCIvLCB7IHRva2VuOiAnc3RyaW5nLmRvdWJsZScsIG5leHQ6ICdAc3RyaW5nRG91YmxlJyB9XVxuICAgICAgICBdLFxuICAgICAgICBzdHJpbmc6IFtcbiAgICAgICAgICAgIFsvW14nXSsvLCAnc3RyaW5nJ10sXG4gICAgICAgICAgICBbLycnLywgJ3N0cmluZyddLFxuICAgICAgICAgICAgWy8nLywgeyB0b2tlbjogJ3N0cmluZycsIG5leHQ6ICdAcG9wJyB9XVxuICAgICAgICBdLFxuICAgICAgICBzdHJpbmdEb3VibGU6IFtcbiAgICAgICAgICAgIFsvW15cIl0rLywgJ3N0cmluZy5kb3VibGUnXSxcbiAgICAgICAgICAgIFsvXCJcIi8sICdzdHJpbmcuZG91YmxlJ10sXG4gICAgICAgICAgICBbL1wiLywgeyB0b2tlbjogJ3N0cmluZy5kb3VibGUnLCBuZXh0OiAnQHBvcCcgfV1cbiAgICAgICAgXSxcbiAgICAgICAgc2NvcGVzOiBbXG4gICAgICAgIC8vIE5PVCBTVVBQT1JURURcbiAgICAgICAgXVxuICAgIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9